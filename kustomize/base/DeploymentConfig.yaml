apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: myapplication
  namespace: mynamespace
  labels:
    name: myapplication
    version: "1.0"
    component: worker
    part-of: myapplication
    managed-by: kustomize
    owner: 7miguel7
    project: myapplication
    created-by: 7miguel7
spec:
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: "myapplication"
                operator: In
                values:
                  - zk
          topologyKey: "kubernetes.io/hostname"
  replicas: 1
  selector:
    app:  myapplication
    deploymentconfig:  myapplication
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      labels:
        app: myapplication
        deploymentconfig: myapplication
        part-of: myapplication
        component: worker
    spec:
      containers:
        - env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: TZ
              value: America/New_York 
            - name: CONNSTRING
              valueFrom:
                secretKeyRef:
                  name: mysecrets
                  key: CONNSTRING      
            - name: EMAIL
              valueFrom:
                secretKeyRef:
                  name: mysecrets
                  key: EMAIL            
          image: myapplication:latest
          ports:
            - containerPort: 8080
              protocol: TCP
          imagePullPolicy: IfNotPresent
          name: myapplication
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          resources:
            limits:
              cpu: '1'
              memory: 700Mi
          volumeMounts:
            - mountPath: /logs
              name: mydrive
              subPath: logs
          livenessProbe:
            httpGet:
              path: /liveness
              port: http
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 30
      dnsPolicy: ClusterFirst
      name:  myapplication
      volumes:
        - name: mydrive
          persistentVolumeClaim:
            claimName: myapplication
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false